#!/usr/bin/env node
process.title = "ashaControl";

var requirejs = require("requirejs");
require("../shim.js")(requirejs);

requirejs(['app.js', 'logger.js', 'http', 'config.js', 'routes/api.js', 'controller/controller.js'], function (app, log, http, config, api, controller) {
    log.settings.info = true;
    log.settings.error = true;
    log.settings.debug = true;

    var port = normalizePort('9000');
    var server = http.createServer(app);

    app.use(config.webif.root, api);
    app.set('port', port);

    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);

    function normalizePort(val) {
        var port = parseInt(val, 10);
        if (isNaN(port)) {
            return val;
        }
        if (port >= 0) {
            return port;
        }
        return false;
    }


    function onError(error) {
        if (error.syscall !== 'listen') {
            throw error;
        }

        var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

        switch (error.code) {
            case 'EACCES':
                log.info(bind + ' requires elevated privileges');
                process.exit(1);
                break;
            case 'EADDRINUSE':
                log.info(bind + ' is already in use');
                process.exit(1);
                break;
            default:
                throw error;
        }
    }

    function onListening() {
        var addr = server.address();
        var bind = typeof addr === 'string'
            ? 'pipe ' + addr
            : 'port ' + addr.port;
        log.info('Listening on ' + bind);
        controller.start();
    }


});
